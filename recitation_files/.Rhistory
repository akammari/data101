moody<-read.csv("https://raw.githubusercontent.com/dev7796/data101_tutorial/main/files/dataset/moody2022.csv")
setwd("~/Desktop/Rutgers Data 101/recitation_files")
# Table
# Making a table of that counts the number of students for each GPA
gpa <- table(moody$GPA)
gpa
score <- table(moody$Score)
score
# Joint distribution of Major and GPA
table(moody$Major, moody$GPA)
table(moody$GPA, moody$Major)
# tapply(numfilter , catfilter, function)
tapply(moody$Score , moody$Grade , min)
tapply(moody[moody$Seniority == 'Freshman',]$Score , moody[moody$Seniority == 'Freshman' ,]$Grade , mean)
# another example
# Sample data
values <- c(12, 15, 8, 10, 14, 9)
groups <- c("A", "B", "A", "B", "A", "B")
# not meaningful.
table(values, groups)
mean_by_group <- tapply(values, groups, mean)
mean_by_group
# Week-2 Recitation
# Topics Covered: Table, Subset, tapply, Box plot, Scatter plot, Bar plot and Mosaic Plot.
# Movies IMDB dataset
movie_data<-read.csv("https://raw.githubusercontent.com/dev7796/data101_tutorial/main/files/dataset/Movies2022F-4.csv")
head(movie_data)
# Summary of the dataset.
summary(movie_data)
# Finding the unique values in content, genre, gross and budget.(Categorical attributes)
unique(movie_data$content)
unique(movie_data$genre)
unique(movie_data$Gross)
unique(movie_data$Budget)
# Table for Genre vs Budget. Family movies are all high budget movies.
table(movie_data$genre, movie_data$Budget)
# Budget-wise Mean IMDB score for movies with high gross. Higher the budget, lower is the mean imdb score.
tapply(movie_data[movie_data$Gross=="High",]$imdb_score, movie_data[movie_data$Gross=="High",]$Budget,mean)
# Gross-wise Max imdb score for Action movies from UK. Values range in between 8.2 to 8.5.
tapply(movie_data[movie_data$country=="UK" & movie_data$genre=="Action", ]$imdb_score, movie_data[movie_data$country=="UK" & movie_data$genre=="Action",]$Gross,max)
# Bar Plot
# Popular genres.
genre_counts <- table(movie_data[movie_data$imdb_score>6.5,]$genre)
genre_counts
barplot(genre_counts, main="Popular Movie Genres", xlab="Genre", ylab="Count", col="red")
# High grossing genres.
genre_counts1 <- table(movie_data[movie_data$Gross=="High",]$genre)
genre_counts1
barplot(genre_counts1, main="High Grossing Movie Genres", xlab="Genre", ylab="Count", col="darkgreen")
# Gross count for US.
gross_counts <- table(movie_data$country=="US", movie_data$Gross)
gross_counts
barplot(gross_counts, main="Gross count for US", xlab="Gross", ylab="Count", col="lightblue")
# Box Plot
# Subset the data where IMDb score >= 7.
high_imdb_movies <- subset(movie_data, movie_data$imdb_score >= 7, select = c(3))
# IMDb score distribution for high-rated movies.
boxplot(high_imdb_movies, main="IMDb Score Distribution for High-Rated Movies", ylab="IMDb Score", col="orange")
# Mosaic Plot
# Mosaic Plot for budget and gross.
colors<- c('red','blue','cyan')
mosaicplot(movie_data$Gross~movie_data$Budget,xlab = 'Gross',ylab ='Budget',main="Mosiac Plot of Gross vs Budget",col=colors,border="black")
# Mosaic Plot for content and genre.
colors1 <- c('red','blue','cyan','yellow','green','orange')
mosaicplot(movie_data$content~movie_data$genre,xlab='Content',ylab ='Genre',main="Mosiac Plot of Content vs Genre",col=colors1,border="black")
# Generate random data points
# sample() generates points randomly given the range.
x <- sample(1:100, 50)
y <- sample(1:100, 50)
# Scatter plot
plot(x, y,main ="Scatter Plot of Random Numbers",xlab ="X-axis",ylab ="Y-axis",col="blue")
# Insurance Charges
insurance <-read.csv("insurance.csv") # Change the path for the dataset.
genre_counts <- table(movie_data[movie_data$imdb_score>6.5,]$genre)
genre_counts
barplot(genre_counts, main="Popular Movie Genres", xlab="Genre", ylab="Count", col="red")
genre_counts1 <- table(movie_data[movie_data$Gross=="High",]$genre)
genre_counts1
barplot(genre_counts1, main="High Grossing Movie Genres", xlab="Genre", ylab="Count", col="darkgreen")
